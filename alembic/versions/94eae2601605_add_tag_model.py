"""add tag  model

Revision ID: 94eae2601605
Revises: 789953bf9c87
Create Date: 2025-06-13 09:44:38.729601

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '94eae2601605'
down_revision: Union[str, None] = '789953bf9c87'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('category',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('description', sa.Text(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('tags',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('lostitem_tag',
    sa.Column('lost_item_id', sa.Integer(), nullable=False),
    sa.Column('tag_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['lost_item_id'], ['lost_items.id'], ),
    sa.ForeignKeyConstraint(['tag_id'], ['tags.id'], ),
    sa.PrimaryKeyConstraint('lost_item_id', 'tag_id')
    )
    op.add_column('found_items', sa.Column('category_id', sa.Integer(), nullable=True))
    op.alter_column('found_items', 'description',
               existing_type=sa.TEXT(),
               nullable=False)
    op.alter_column('found_items', 'found_date',
               existing_type=postgresql.TIMESTAMP(),
               type_=sa.DateTime(timezone=True),
               existing_nullable=False)
    op.create_index(op.f('ix_found_items_category_id'), 'found_items', ['category_id'], unique=False)
    op.create_foreign_key(None, 'found_items', 'category', ['category_id'], ['id'])
    op.add_column('lost_items', sa.Column('category_id', sa.Integer(), nullable=True))
    op.alter_column('lost_items', 'description',
               existing_type=sa.TEXT(),
               nullable=False)
    op.alter_column('lost_items', 'lost_date',
               existing_type=postgresql.TIMESTAMP(),
               type_=sa.DateTime(timezone=True),
               existing_nullable=False)
    op.create_index(op.f('ix_lost_items_category_id'), 'lost_items', ['category_id'], unique=False)
    op.create_foreign_key(None, 'lost_items', 'category', ['category_id'], ['id'])
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'lost_items', type_='foreignkey')
    op.drop_index(op.f('ix_lost_items_category_id'), table_name='lost_items')
    op.alter_column('lost_items', 'lost_date',
               existing_type=sa.DateTime(timezone=True),
               type_=postgresql.TIMESTAMP(),
               existing_nullable=False)
    op.alter_column('lost_items', 'description',
               existing_type=sa.TEXT(),
               nullable=True)
    op.drop_column('lost_items', 'category_id')
    op.drop_constraint(None, 'found_items', type_='foreignkey')
    op.drop_index(op.f('ix_found_items_category_id'), table_name='found_items')
    op.alter_column('found_items', 'found_date',
               existing_type=sa.DateTime(timezone=True),
               type_=postgresql.TIMESTAMP(),
               existing_nullable=False)
    op.alter_column('found_items', 'description',
               existing_type=sa.TEXT(),
               nullable=True)
    op.drop_column('found_items', 'category_id')
    op.drop_table('lostitem_tag')
    op.drop_table('tags')
    op.drop_table('category')
    # ### end Alembic commands ###
